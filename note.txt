username: admin
password: 123

-------- ANGULAR JS 1.x -------------

controllers, directives, filters, and more

AngularJS Directives
>ng-app
>ng-model
>ng-init
>ng-bind
>ng-repeat :" x in names" {{x}}


The ng-app directive initializes an AngularJS application.
The ng-init directive initializes application data.


custome directive
==================

 When naming a directive, you must use a camel case name,
 w3TestDirective, but when invoking it, you must use - separated name, 
 w3-test-directive:

You can invoke a directive by using:

> Element name
> Attribute
> Class
> Comment

 <w3-test-directive></w3-test-directive>
 <div w3-test-directive></div>
 <div class="w3-test-directive"></div>
 <!-- directive: w3-test-directive -->


By adding a restrict property with the value "A", 
the directive can only be invoked by attributes:

The legal restrict values are:

E for Element name
A for Attribute
C for Class
M for Comment

By default the value is EA, meaning that both 
Element names and attribute names can invoke the directive.


app.directive("w3TestDirective", function() {
	return {
		restrict : "A",
		template : "I was made in a directive constructor!" 
	};
});







ng-model Directive 
===================

The ng-model directive binds 
the value of HTML controls (input, select, textarea) to application data.

Provide type validation for application data (number, email, required).
Provide status for application data (invalid, dirty, touched, error).
Provide CSS classes for HTML elements.
Bind HTML elements to HTML forms.

>provide status for application data (invalid, dirty, touched, error):

> Validate User Input
> Application Status
> CSS Classes

ng-model directive adds/removes the following classes, 
according to the status of the form field:

ng-empty
ng-not-empty
ng-touched
ng-untouched
ng-valid
ng-invalid
ng-dirty
ng-pending
ng-pristine




AngularJS Data Binding
=======================

> Data Model : 
 
 
.  ng-model directive to bind data from the model to
   the view on HTML controls (input, select, textarea).

.  provides a two-way binding between the model and the view

  <input ng-model="firstname">
  <p ng-bind="firstname"></p>
  <p>First name: {{firstname}}</p>








AngularJS Controller 
=====================

A controller is a JavaScript Object,
created by a standard JavaScript object constructor.









AngularJS Scope
=================

> binding part between the HTML (view) and the JavaScript (controller).
> scope is an object with the available properties and methods.
> available for both the view and the controller.

> View, which is the HTML.
> Model, which is the data available for the current view.
> Controller, which is the JavaScript function 
that makes/changes/removes/controls the data.



Root Scope
-----------
> $rootScope which is the scope created on the 
  HTML element that contains the ng-app directive.










AngularJS Filters
==================

> currency Format a number to a currency format.
> date Format a date to a specified format.
> filter Select a subset of items from an array.
> json Format an object to a JSON string.
> limitTo Limits an array/string, into a specified number of 
elements/characters.
> lowercase Format a string to lower case.
> number Format a number to a string.
> orderBy Orders an array by an expression.
> uppercase Format a string to upper case.



<p>The name is {{ lastName | uppercase }}</p>

<li ng-repeat="x in names | orderBy:'country'">
    {{ x.name + ', ' + x.country }}
 </li>

The filter Filter
-----------------

> filter selects a subset of an array.
> filter can only be used on arrays, and it returns
  an array containing only the matching items.


Display the items that contains the letter "A":
<li ng-repeat="x in names | filter : 'i'">

{{ arrayexpression | filter : expression : comparator }}

<li ng-repeat="x in customers | filter : {'name' : 'O', 'city' : 'London'}">

<li ng-repeat="x in customers | filter : 'London' : true">

<li ng-repeat="x in names | filter:test">

Custom Filters
--------------

<li ng-repeat="x in names">
   {{x | myFormat}}
</li>








AngularJS Services
===================

> service is a function, or object, that is available for, 
  and limited to, your AngularJS application.
  
  
  
  
  
  
  ----------------------------------------------------------------
  
  
  
  <!-- index.html -->
<!DOCTYPE html>
<html>
<head>

	<!-- CSS (load bootstrap) -->
	<link rel="stylesheet" href="assets/css/bootstrap.min.css">
	<link rel="stylesheet" href="assets/css/ui-grid/ui-grid.css">

	<style>
	.navbar { border-radius:0; }
	.myGrid {width: 800px; height: 500px; } 
</style>

<!-- JS (load angular, ui-router, and our custom js file) -->
<script src="assets/js/angular-1.2.13.js"></script>
<!-- <script src="assets/js/angular-ui-router.min.js"></script> -->
<script src="assets/js/angular-ui-router.js"></script>
<script src="assets/js/ui-grid/ui-grid.min.js"></script>
<!-- <script src="assets/js/st.js"></script> -->

<!-- myapp script -->
<script type="text/javascript">
	var app =  angular.module('myapp',['ui.grid','ui.router']);

	app.config(['$stateProvider',  function ($stateProvider) {
		$stateProvider.state('users', {
			url: '/users', 
			params: { obj : null },
			controller: function($stateParams) {
				console.log($stateParams);
			}
		});
	}]);

	
	app.controller('workflow-filter', ['$scope','$state' , function($scope, $state) {
		$scope.filter_type_list = ['customer Name', 'CIN', 'PAN CARD', 'COMPany Name'];
		$scope.filter_type_value = [];
		$scope.filterData= {};
		$scope.filterData.data = [];

		$scope.getFilterValue = function getFilterValue(){
			if($scope.filter_type === 'customer Name'){
				$scope.filter_type_value = getCustomerName();
			}else if($scope.filter_type === 'COMPany Name'){
				$scope.filter_type_value = getCompanyNames();
			}else{
				$scope.filter_type_value = [];
			}
		};

		$scope.getFilterData = function getFilterData(){
			//  get row data and bind to angular grid 
			
			$scope.filterData.data = [{"applicationId":"87851480-1c47-4d69-aa9c-18328fc32c17","companyName":"PRAGMATIX SERVICES PRIVATE LIMITED","companyPan":"AALCS1707J","finalScore":"3.93","overrideScore":null,"finalRating":null,"applicationTimeStamp":1529047075000,"id":19008,"modelName":"Pragmatix","modelId":99,"productType":"Long Term Loan","executionGroups":null},{"applicationId":"3cf40883-05dc-4287-81d3-669677657596","companyName":"PRAGMATIX SERVICES PRIVATE LIMITED","companyPan":"AALCS1707J","finalScore":"3.93","overrideScore":null,"finalRating":null,"applicationTimeStamp":1529048203000,"id":19011,"modelName":"Pragmatix","modelId":99,"productType":"Long Term Loan","executionGroups":null},{"applicationId":"e2e1dae4-afa7-443a-8852-a7d564aaf00d","companyName":"PRAGMATIX SERVICES PRIVATE LIMITED","companyPan":"AALCS1707J","finalScore":"3.93","overrideScore":null,"finalRating":null,"applicationTimeStamp":1529050717000,"id":19012,"modelName":"Pragmatix","modelId":99,"productType":"Long Term Loan","executionGroups":null},{"applicationId":"16f24e15-1d0b-4de2-b628-3432abd06b48","companyName":"PRAGMATIX SERVICES PRIVATE LIMITED","companyPan":"AALCS1707J","finalScore":"3.93","overrideScore":null,"finalRating":null,"applicationTimeStamp":1529047653000,"id":19009,"modelName":"Pragmatix","modelId":99,"productType":"Long Term Loan","executionGroups":null},{"applicationId":"8ca0ef53-35f9-4a90-9b28-ef1775d2e51d","companyName":"PRAGMATIX SERVICES PRIVATE LIMITED","companyPan":"AALCS1707J","finalScore":"3.93","overrideScore":null,"finalRating":null,"applicationTimeStamp":1528888256000,"id":18986,"modelName":"Pragmatix","modelId":99,"productType":"Long Term Loan","executionGroups":null},{"applicationId":"82269f4c-3f87-45ac-a09b-ab3e824534a8","companyName":"PRAGMATIX SERVICES PRIVATE LIMITED","companyPan":" AAFCP5883J","finalScore":"3.93","overrideScore":null,"finalRating":null,"applicationTimeStamp":1532588663000,"id":19157,"modelName":"Pragmatix","modelId":99,"productType":"Long Term Loan","executionGroups":null},{"applicationId":"09e294aa-cd48-4b47-b859-cabc18d4b198","companyName":"PRAGMATIX SERVICES PRIVATE LIMITED","companyPan":" AAFCP5883J","finalScore":"3.93","overrideScore":null,"finalRating":null,"applicationTimeStamp":1534510289000,"id":19182,"modelName":"Pragmatix","modelId":99,"productType":"Long Term Loan","executionGroups":null},{"applicationId":"6bd2bb6b-432f-4e2e-b60f-e456393de1f6","companyName":"PRAGMATIX SERVICES PRIVATE LIMITED","companyPan":"AALCS1707J","finalScore":"3.93","overrideScore":null,"finalRating":null,"applicationTimeStamp":1529047858000,"id":19010,"modelName":"Pragmatix","modelId":99,"productType":"Long Term Loan","executionGroups":null},{"applicationId":"a5b90924-9bc8-4b6f-b588-9460315cb7f7","companyName":"PRAGMATIX SERVICES PRIVATE LIMITED","companyPan":"AALCS1707J","finalScore":"3.93","overrideScore":null,"finalRating":null,"applicationTimeStamp":1528897329000,"id":18990,"modelName":"Pragmatix","modelId":99,"productType":"Long Term Loan","executionGroups":null},{"applicationId":"1c273637-27bd-42e5-a2bb-20655a94de5f","companyName":"PRAGMATIX SERVICES PRIVATE LIMITED","companyPan":"AALCS1707J","finalScore":"3.93","overrideScore":null,"finalRating":null,"applicationTimeStamp":1528714342000,"id":18971,"modelName":"Pragmatix","modelId":99,"productType":"Long Term Loan","executionGroups":null},{"applicationId":"23099156-c1a6-4e0e-9e7a-bb0713f6d4e3","companyName":"PRAGMATIX SERVICES PRIVATE LIMITED","companyPan":" AAFCP5883J","finalScore":"3.93","overrideScore":null,"finalRating":null,"applicationTimeStamp":1530614688000,"id":19068,"modelName":"Pragmatix","modelId":99,"productType":"Long Term Loan","executionGroups":null},{"applicationId":"1c273637-27bd-42e5-a2bb-20655a94de5f","companyName":"PRAGMATIX SERVICES PRIVATE LIMITED","companyPan":"AALCS1707J","finalScore":"3.93","overrideScore":null,"finalRating":null,"applicationTimeStamp":1528714143000,"id":18970,"modelName":"Pragmatix","modelId":99,"productType":"Long Term Loan","executionGroups":null},{"applicationId":"1c273637-27bd-42e5-a2bb-20655a94de5f","companyName":"PRAGMATIX SERVICES PRIVATE LIMITED","companyPan":"AALCS1707J","finalScore":"3.93","overrideScore":null,"finalRating":null,"applicationTimeStamp":1528706423000,"id":18969,"modelName":"Pragmatix","modelId":99,"productType":"Long Term Loan","executionGroups":null},{"applicationId":"1c273637-27bd-42e5-a2bb-20655a94de5f","companyName":"PRAGMATIX SERVICES PRIVATE LIMITED","companyPan":"AALCS1707J","finalScore":"3.93","overrideScore":null,"finalRating":null,"applicationTimeStamp":1528706207000,"id":18968,"modelName":"Pragmatix","modelId":99,"productType":"Long Term Loan","executionGroups":null},{"applicationId":"82269f4c-3f87-45ac-a09b-ab3e824534a8","companyName":"PRAGMATIX SERVICES PRIVATE LIMITED","companyPan":" AAFCP5883J","finalScore":"3.93","overrideScore":null,"finalRating":null,"applicationTimeStamp":1532073839000,"id":19112,"modelName":"Pragmatix","modelId":99,"productType":"Long Term Loan","executionGroups":null}];

			

			var gridBaseObj = {
				paginationPageSizes: [5, 10, 25, 50],
				paginationPageSize: 25,
				useExternalPagination: false,
				enableFiltering: false,
				useExternalSorting: false,
				multiSelect: false,
				enableRowHeaderSelection: false,
				// enableHorizontalScrollbar: uiGridConstants.scrollbars.NEVER,
				// enableVerticalScrollbar: uiGridConstants.scrollbars.NEVER,
				enableSorting: true
			};

			$scope.filterData = angular.copy(gridBaseObj);


			$scope.showDetailsButton = function () {
				return '<div class="grid-action-cell"><span ng-click="grid.appScope.getApplicationData(row.entity)" style="cursor:pointer;">' +
				'<img src="./assets/images/icons/view_details.png" alt="View Details" style="height:75%;" ></span></div>';
			}


			$scope.filterData.columnDefs =  [
			{ field: 'applicationTimeStamp', displayName: 'Date' },
			{ field: 'productType', displayName: 'Product Type' },
			{ field: 'modelName', displayName: 'Model Name'},
			{ field: 'workflowStatus', displayName: 'Status'},
			{ field: 'executionGroups', displayName: 'Execution Groups'},
			{
				field: 'id', enableSorting: false, enableFiltering: false, width: '20%', enableCellEdit: false, displayName: 'More Details', cellClass: 'text-center',
				cellTemplate: $scope.showDetailsButton()
			}
			];

		};


		$scope.getApplicationData = function (entity) {
			// get data and bind it to view 
			// get data 

			// in app-states.js (or whatever you want to name it)
			// $state.state('contacts', {
			// 	template: '<h1>My Contacts</h1>'
			// })

			$state.go('users', {obj : entity});
			// $state.go('users', entity);
		};
		
		function getCustomerName(){
			return ['jhamaman','bablu','anil'];
		}

		function getCompanyNames(){
			return ['RKENT','JK ENT','ANIL ENT'];
		}


	}]);

</script>

</head>

<!-- apply our angular app to our site -->
<body ng-app="myapp">

	<!-- NAVIGATION -->
	<nav class="navbar navbar-inverse" role="navigation">
		<div class="navbar-header">
			<a class="navbar-brand" ui-sref="#">AngularUI Router</a>
		</div>
		<ul class="nav navbar-nav">
			<li><a ui-sref="home">Home</a></li>
			<li><a ui-sref="about">About</a></li>
		</ul>
	</nav>

	<!-- MAIN CONTENT -->
	<div class="container">


		<section ng-controller='workflow-filter' class="workflow-filter">

			<!-- ROW 1 -->
			<div class="row ">
				<div class="col-sm-4">
					<select class="form-control form-inline" ng-model="filter_type" ng-options="filter_list for filter_list  in filter_type_list" ng-change="getFilterValue()">
					</select>
				</div>

				<div class="col-sm-4"> 
					<input type='text' class="form-control form-inline" list="workflow-value" ng-model="filter_value" ng-blur="getFilterData()"  placeholder=" filter value">
				</div>

				<datalist id="workflow-value">
					<option ng-repeat="filter_val_list in filter_type_value" value="{{filter_val_list}}" >
						{{filter_val_list}}
					</option>
				</datalist>

			</div><!-- ROW 1 END  -->



			<!-- row 2 -->
			<div class="row">
				<div ui-grid="filterData" class="myGrid"></div>
			</div>

		</section> <!-- workflow-filter end -->




		<!-- THIS IS WHERE WE WILL INJECT OUR CONTENT ============================== -->
		<div ui-view></div>

	</div>

</body>
</html>


